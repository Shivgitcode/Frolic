/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VideouploadImport } from './routes/videoupload'
import { Route as HomeImport } from './routes/home'
import { Route as PathLessLayoutRouteImport } from './routes/_pathLessLayout/route'
import { Route as IndexImport } from './routes/index'
import { Route as VideoVideoIdImport } from './routes/video.$videoId'
import { Route as PathLessLayoutauthSignupImport } from './routes/_pathLessLayout/(auth)/signup'
import { Route as PathLessLayoutauthLoginImport } from './routes/_pathLessLayout/(auth)/login'

// Create/Update Routes

const VideouploadRoute = VideouploadImport.update({
  id: '/videoupload',
  path: '/videoupload',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const PathLessLayoutRouteRoute = PathLessLayoutRouteImport.update({
  id: '/_pathLessLayout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const VideoVideoIdRoute = VideoVideoIdImport.update({
  id: '/video/$videoId',
  path: '/video/$videoId',
  getParentRoute: () => rootRoute,
} as any)

const PathLessLayoutauthSignupRoute = PathLessLayoutauthSignupImport.update({
  id: '/(auth)/signup',
  path: '/signup',
  getParentRoute: () => PathLessLayoutRouteRoute,
} as any)

const PathLessLayoutauthLoginRoute = PathLessLayoutauthLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => PathLessLayoutRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_pathLessLayout': {
      id: '/_pathLessLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathLessLayoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/videoupload': {
      id: '/videoupload'
      path: '/videoupload'
      fullPath: '/videoupload'
      preLoaderRoute: typeof VideouploadImport
      parentRoute: typeof rootRoute
    }
    '/video/$videoId': {
      id: '/video/$videoId'
      path: '/video/$videoId'
      fullPath: '/video/$videoId'
      preLoaderRoute: typeof VideoVideoIdImport
      parentRoute: typeof rootRoute
    }
    '/_pathLessLayout/(auth)/login': {
      id: '/_pathLessLayout/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof PathLessLayoutauthLoginImport
      parentRoute: typeof PathLessLayoutRouteImport
    }
    '/_pathLessLayout/(auth)/signup': {
      id: '/_pathLessLayout/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof PathLessLayoutauthSignupImport
      parentRoute: typeof PathLessLayoutRouteImport
    }
  }
}

// Create and export the route tree

interface PathLessLayoutRouteRouteChildren {
  PathLessLayoutauthLoginRoute: typeof PathLessLayoutauthLoginRoute
  PathLessLayoutauthSignupRoute: typeof PathLessLayoutauthSignupRoute
}

const PathLessLayoutRouteRouteChildren: PathLessLayoutRouteRouteChildren = {
  PathLessLayoutauthLoginRoute: PathLessLayoutauthLoginRoute,
  PathLessLayoutauthSignupRoute: PathLessLayoutauthSignupRoute,
}

const PathLessLayoutRouteRouteWithChildren =
  PathLessLayoutRouteRoute._addFileChildren(PathLessLayoutRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof PathLessLayoutRouteRouteWithChildren
  '/home': typeof HomeRoute
  '/videoupload': typeof VideouploadRoute
  '/video/$videoId': typeof VideoVideoIdRoute
  '/login': typeof PathLessLayoutauthLoginRoute
  '/signup': typeof PathLessLayoutauthSignupRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof PathLessLayoutRouteRouteWithChildren
  '/home': typeof HomeRoute
  '/videoupload': typeof VideouploadRoute
  '/video/$videoId': typeof VideoVideoIdRoute
  '/login': typeof PathLessLayoutauthLoginRoute
  '/signup': typeof PathLessLayoutauthSignupRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_pathLessLayout': typeof PathLessLayoutRouteRouteWithChildren
  '/home': typeof HomeRoute
  '/videoupload': typeof VideouploadRoute
  '/video/$videoId': typeof VideoVideoIdRoute
  '/_pathLessLayout/(auth)/login': typeof PathLessLayoutauthLoginRoute
  '/_pathLessLayout/(auth)/signup': typeof PathLessLayoutauthSignupRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/home'
    | '/videoupload'
    | '/video/$videoId'
    | '/login'
    | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/home'
    | '/videoupload'
    | '/video/$videoId'
    | '/login'
    | '/signup'
  id:
    | '__root__'
    | '/'
    | '/_pathLessLayout'
    | '/home'
    | '/videoupload'
    | '/video/$videoId'
    | '/_pathLessLayout/(auth)/login'
    | '/_pathLessLayout/(auth)/signup'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PathLessLayoutRouteRoute: typeof PathLessLayoutRouteRouteWithChildren
  HomeRoute: typeof HomeRoute
  VideouploadRoute: typeof VideouploadRoute
  VideoVideoIdRoute: typeof VideoVideoIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PathLessLayoutRouteRoute: PathLessLayoutRouteRouteWithChildren,
  HomeRoute: HomeRoute,
  VideouploadRoute: VideouploadRoute,
  VideoVideoIdRoute: VideoVideoIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_pathLessLayout",
        "/home",
        "/videoupload",
        "/video/$videoId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_pathLessLayout": {
      "filePath": "_pathLessLayout/route.tsx",
      "children": [
        "/_pathLessLayout/(auth)/login",
        "/_pathLessLayout/(auth)/signup"
      ]
    },
    "/home": {
      "filePath": "home.tsx"
    },
    "/videoupload": {
      "filePath": "videoupload.tsx"
    },
    "/video/$videoId": {
      "filePath": "video.$videoId.tsx"
    },
    "/_pathLessLayout/(auth)/login": {
      "filePath": "_pathLessLayout/(auth)/login.tsx",
      "parent": "/_pathLessLayout"
    },
    "/_pathLessLayout/(auth)/signup": {
      "filePath": "_pathLessLayout/(auth)/signup.tsx",
      "parent": "/_pathLessLayout"
    }
  }
}
ROUTE_MANIFEST_END */
